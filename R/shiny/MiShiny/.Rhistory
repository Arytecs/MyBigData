average<-rowMeans(d[,7:11])
d <- read.csv("https://stats.idre.ucla.edu/stat/data/hsb2.csv")
average<-rowMeans(d[,7:11])
d<-cbind(d,average)
by(d[,c("average")], list(d$race,d$female), mean)
by(d[,8:9], d$female, colMeans)
d <- mutate(d,
id = factor(id),
female = factor(female, levels = 0:1, labels = c("male", "female")),
race = factor(race, levels = 1:4, labels = c("Hispanic", "Asian", "African American", "White")),
schtyp = factor(schtyp, levels = 1:2, labels = c("public", "private")),
prog = factor(prog, levels = 1:3, labels = c("general", "academic", "vocational"))
)
head(d)
d <- mutate(d,
id = factor(id),
female = factor(female, levels = 0:1, labels = c("male", "female")),
race = factor(race, levels = 1:4, labels = c("Hispanic", "Asian", "African American", "White")),
schtyp = factor(schtyp, levels = 1:2, labels = c("public", "private")),
prog = factor(prog, levels = 1:3, labels = c("general", "academic", "vocational"))
)
average<-rowMeans(d[,7:11])
d<-cbind(d,average)
by(d[,c("average")], list(d$race,d$female), mean)
lista<-by(d[,c("average")], list(d$race,d$female), mean)
mivec<-unlist(lista)
sort(mivec[seq(1, length(mivec), 2)])
library(ggplot2)
library(ggplot2)
setwd("~/Escritorio/R/UFO")
help(read.delim)
ufo<-read.delim("ufo_awesome.tsv", sep="\t", stringsAsFactors=FALSE,
header=FALSE, na.strings="")
summary(ufo)
library(ggplot2)
ufo<-read.delim("ufo_awesome.tsv", sep="\t", stringsAsFactors=FALSE,
header=FALSE, na.strings="")
head(ufo)
summary(ufo)
dim(ufo)
ncol(ufo)
nrow(ufo)
str(ufo)
is.na(ufo[4])
sum(is.na(ufo[4]))
names(ufo)<-c("DateOccurred","DateReported","Location","ShortDescription",
"Duration","LongDescription")
head(ufo)
ufo$DateOccurred<-as.Date(ufo$DateOccurred, format="%Y%m%d")
is.na(ufo$DateOccurred)
sum(is.na(ufo$DateOccurred))
nchar(ufo$DateOccurred)
nchar(ufo$DateOccurred)!=8
sum(nchar(ufo$DateOccurred)!=8)
which(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8)
head(ufo[which(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8),1])
ufo[which(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8),1]
head(ufo[which(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8),1])
good.rows<-ifelse(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8,FALSE, TRUE)
length(which(!good.rows))
length(!good.rows)
ufo<-ufo[good.rows,] #NOS LOS CARGAMOS
ufo$DateOccurred<-as.Date(ufo$DateOccurred, format="%Y%m%d")
summary(ufo)
str(ufo)
get.location<-function(l) {
split.location<-tryCatch(strsplit(l,",")[[1]], error= function(e) return(c(NA, NA)))
clean.location<-gsub("^ ","",split.location)
if (length(clean.location)>2) {
return(c(NA,NA))
}
else {
return(clean.location)
}
}
get.location(ufo[1,3])
help(strsplit)
help(gsub)
sapply(ufo[,3], get.location)
city.state<-lapply(ufo$Location, get.location)
head(city.state)
location.matrix<-do.call(rbind, city.state)
head(location.matrix)
ufo<-transform(ufo, USCity=location.matrix[,1], USState=tolower(location.matrix[,2]),
stringsAsFactors=FALSE)
head(ufo)
summary(ufo)
unique(ufo[,"USState"])
ufo[, ufo$USState == "valencia (spain)"]
ufo[ufo$USState == "valencia (spain)"]
ufo[ufo$USState == "valencia (spain)",]
which(ufo[ufo$USState == "valencia (spain)",])
ufo[ufo$USState == "valencia (spain)",]
which(ufo$USState == "valencia (spain)")
ufo[which(ufo$USState == "valencia (spain)")]
ufo[which(ufo$USState == "valencia (spain)"),]
ufo[which(ufo$USState == "alicante (spain)"),]
us.states<-c("ak","al","ar","az","ca","co","ct","de","fl","ga","hi","ia","id","il",
"in","ks","ky","la","ma","md","me","mi","mn","mo","ms","mt","nc","nd","ne","nh",
"nj","nm","nv","ny","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","va","vt",
"wa","wi","wv","wy")
head(match(ufo$USState, us.states))
ufo$USState<-us.states[match(ufo$USState,us.states)]
ufo[which(ufo$USState == "alicante (spain)"),] #Curiosidad
ufo$USCity[is.na(ufo$USState)]<-NA
ufo.us<-subset(ufo, !is.na(USState))
head(ufo.us)
View(location.matrix)
summary(ufo.us$DateOccurred)
ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()
ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()
ggplot(d, aes(x = 1, y = math)) + geom_boxplot()
ggplot(ufo.us, aes(x = 1, y = DateOcurred)) + geom_boxplot()
ggplot(ufo.us, aes(x = DateOcurred)) + geom_boxplot()
ggplot(ufo.us, aes(x = DateOccurred)) + geom_boxplot()
ggplot(ufo.us, aes(x = 1 , y= DateOccurred)) + geom_boxplot()
ufo.us<-subset(ufo.us, DateOccurred>=as.Date("1990-01-01"))
nrow(ufo.us)
ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()
ufo.us$YearMonth<-strftime(ufo.us$DateOccurred, format="%Y-%m")
head(ufo.us)
require (plyr)
sightings.counts<-ddply(ufo.us,.(USState,YearMonth), nrow)
head(sightings.counts)
max(sightings.counts["V1"])
which.max(sightings.counts["V1"])
date.range<-seq.Date(from=as.Date(min(ufo.us$DateOccurred)),
to=as.Date(max(ufo.us$DateOccurred)), by="month")
head(date.range)
date.strings<-strftime(date.range, "%Y-%m")
head(date.strings)
states.dates<-lapply(us.states,function(s) cbind(s,date.strings))
head(states.dates)
dim(states.dates)
nrow(states.dates)
ncol(states.dates)
typeof(states.dates)
length(states.dates)
states.dates<-data.frame(do.call(rbind, states.dates), stringsAsFactors=FALSE)
head(states.dates)
all.sightings<-merge(states.dates,sightings.counts,by.x=c("s","date.strings"),
by.y=c("USState","YearMonth"),all=TRUE)
head(all.sightings)
names(all.sightings)<-c("State","YearMonth","Sightings")
head(all.sightings)
all.sightings$Sightings[is.na(all.sightings$Sightings)]<-0
head(all.sightings)
all.sightings$YearMonth<-as.Date(rep(date.range,length(us.states)))
head(all.sightings)
all.sightings$State<-as.factor(toupper(all.sightings$State))
head(all.sightings)
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
summary(all.sightings)
pdf("ufoPlot.pdf")
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
dev.pdf
dev.pdf()
dev.off()
help(pdf)
pdf("ufoPlot.pdf", paper="landscape")
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
dev.off()
pdf("ufoPlot.pdf", paper="landscape")
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
dev.off()
pdf("ufoPlot.pdf", paper=landscape)
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
pdf("ufoPlot.pdf", paper="USr")
ggplot(all.sightings, aes(x=YearMonth,y=Sightings))+
geom_line(aes())+
facet_wrap(~State,nrow=10,ncol=5)+ #partimos en 50 plots
theme_bw()+ # tema
xlab("Time")+ylab("Number of Sightings")
dev.off()
setwd("~/Escritorio/R/valenbisi")
file<-"estacion_1_2011_2014.csv"
dat<-read.csv(file,sep=";")
head(dat)
numrows<-length(dat[,1])
print("num days")
print (numrows/7)
str(dat)
print (numrows/24)
print("fecha inicial")
dat[1,2]
print("fecha final")
dat[numrows,2]
as.Date(date[1,2])
as.Date(dat[1,2])
diasem<-as.POSIXlt(as.Date(dat[,2]))$wday #Mete el dÃ­a de la semana
head(diasem)
unique(diasem)
diasem[which(diasem==0)]<-7
diasem
unique(diasem)
dat$diasem<-diasem
head(dat)
by(dat[,c("avg_available","med_available")],list(dat$hour,dat$diasem),colMeans)
xhoradia<-by(dat[,c("avg_available","med_available")],list(dat$hour,dat$diasem),colMeans)
xhora<-by(dat[,c("avg_available","med_available")],dat$hour,colMeans)
head(xhora)
xhora
xhora<-unlist(xhora)[seq(1,48,2)]
xhora
xhoradia<-unlist(xhoradia)[seq(1,336,2)]
xhoradia
mhoradia<-matrix(xhoradia,24,7)
mhoradia
plot(xhora,lty=1,type="l", ylab="Free Bicycles", xlab="hours",xlim=c(0,24),main="Guillem de Castro. Day Average",col="red")
plot(mhoradia[,1],lty=1,type="l", ylab="Free Bicycles", xlab="hours", ylim=c(1,10), col=1,xlim=c(0,24),main="Day Average ")
plot(xhora,lty=1,type="l", ylab="Free Bicycles", xlab="hours",xlim=c(0,24),main="Guillem de Castro. Day Average",col="red")
plot(xhora,lty=1,type="l", ylab="Free Bicycles", xlab="hours",xlim=c(0,24),main="Guillem de Castro. Day Average",col="red")
for ( i in 2:7)
{
lines(mhoradia[,i], lty=i,col=i,xlim=c(0,24),main="Guillem de Castro.01/01/2014-31/05/2014. Day Average ")
}
legend('top',c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"), col=c(1:7), lty=1:7,cex=0.8)
plot(mhoradia[,1],lty=1,type="l", ylab="Free Bicycles", xlab="hours", ylim=c(1,10), col=1,xlim=c(0,24),main="Day Average ")
for ( i in 2:7)
{
lines(mhoradia[,i], lty=i,col=i,xlim=c(0,24),main="Guillem de Castro.01/01/2014-31/05/2014. Day Average ")
}
legend('top',c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"), col=c(1:7), lty=1:7,cex=0.8)
head(dat)
mhoradia
xhoradia
xdia<-by(dat[, "avg_available"], dat$diasem, mean)
head(xdia)
xdia
max(xdia)
whitch.max(xdia)
which.max(xdia)
which.min(xdia)
which.max(xdia)
help(as.POSIXlt)
as.POSIXlt(as.Date(dat[,2]))
head(as.POSIXlt(as.Date(dat[,2])))
head(as.POSIXlt(as.Date(dat[,2]))$month)
head(as.POSIXlt(as.Date(dat[,2]))$wmonth)
head(as.POSIXlt(as.Date(dat[,2]))$wday)
head(as.POSIXlt(as.Date(dat[,2]))$wmonth)
typeof(as.POSIXlt(as.Date(dat[,2])))
head(as.POSIXlt(as.Date(dat[,2]))$month)
head(month(as.POSIXlt(as.Date(dat[,2]))))
head(format(as.POSIXlt(as.Date(dat[,2]))), "%m")
head(as.POSIXlt(as.Date(dat[,2])))
head(format(as.POSIXct(as.Date(dat[,2]))), "%m")
head(format(as.POSIXlt(as.Date(dat[,2]))), "%m")
head(strftime(as.Date(dat[,2]), "%m"))
months<-strftime(as.Date(dat[,2]), "%m"))
months<-strftime(as.Date(dat[,2]), "%m")
dat$month<-months
head(dat)
xmonth<-by(c[,"avg_available"], dat$month,mean)
xmonth<-by(dat[,"avg_available"], dat$month,mean)
xmonth
which.min(xmonth)
head(dat)
format(as.Date(dat[,2]), "%m-%d")
esFallas<-ifelse(format(as.Date(dat[,2]), "%m-%d")>"03-13" & format(as.Date(dat[,2]), "%m-%d")<"03-20", TRUE, FALSE)
head(esFallas)
dat$esFallas<-esFallas
head(dat)
head(xdia)
head(xhora)
xdia2<-by(dat[, "avg_available"], list(dat$diasem, dat$esFallas), colMeans)
xdia2<-by(dat[, "avg_available"], list(dat$diasem, dat$esFallas), mean)
head(xdia2)
xdia2
plot(xhora,lty=1,type="l", ylab="Free Bicycles", xlab="hours",xlim=c(0,24),main="Guillem de Castro. Day Average",col="red")
diasFallas<-subset(dat, esFallas==TRUE, avg_available)
diasFallas
diasFallas<-subset(dat, esFallas==TRUE, c(date,avg_available))
diasFallas
dat[1612]
dat[1612,]
diasNoFallas<-subset(dat,esFallas==FALSE, c(date,avg_available))
dim(dat)
dim(diasFallas)
dim(diasNoFallas)
nrow(diasFallas) + nrow(diasNoFallas)
plot(c(diasFallas,diasNoFallas))
plot(diasFallas,diasNoFallas
)
plot(c(diasFallas,diasNoFallas)
plot(c(diasFallas,diasNoFallas))
plot(c(diasFallas,diasNoFallas))
plot(c(diasFallas,diasNoFallas), lty=1)
plot(diasFallas)
plot(diasNoFallas)
help(subplot)
help(plot)
par(mfrow=c(2,1))
plot(diasFallas)
plot(diasNoFallas)
plot(diasFallas, main="Dias de Fallas", xlab="Dias", ylab="Bicis Disponibles")
plot(diasNoFallas, main="Dias que no son Fallas",xlab="Dias", ylab="Bicis Disponibles")
esVerano<-ifelse(format(as.Date(dat[,2]), "%m-%d") >= "06-21" & format(as.Date(dat[,2]), "%m-%d") < "09-21", TRUE, FALSE)
head(esVerano)
dat$esVerano<-esVerano
head(dat)
diasVerano<-subset(dat, esVerano==TRUE, c(date,avg_available))
diasInvierno<-subset(dat, esVerano==FALSE, c(date,avg_available))
par(mfrow=c(2,1))
plot(diasVerano, main="Dias de Verano", xlab="Dias", ylab="Bicis Disponibles")
plot(diasInvierno, main="Dias de Invierno",xlab="Dias", ylab="Bicis Disponibles")
plot(dat$date, dat$avg_available)
by(diasVerano[,"avg_available"],mean)
mean(diasVerano)
mean(diasVerano$avg_available)
mean(diasInvierno$avg_available)
mean(diasFallas$avg_available)
mean(diasNoFallas$avg_available)
by(diasFallas[,"avg_available"], diasFallas$date, mean)
plot(by(diasFallas[,"avg_available"], diasFallas$date, mean))
par(mfrow=c(2,1))
plot(diasVerano, main="Dias de Verano", xlab="Dias", ylab="Bicis Disponibles")
plot(diasInvierno, main="Dias de Invierno",xlab="Dias", ylab="Bicis Disponibles")
mean(diasFallas$avg_available)
mean(diasNoFallas$avg_available)
mean(diasVerano$avg_available)
mean(diasInvierno$avg_available)
dat$fecha<-as.Date(dat[,2])
xfecha<-by(dat[, "avg_available"], dat$fecha, mean)
which.min(xfecha)
which.max(xfecha)
esInvierno<-ifelse(format(as.Date(dat[,2]), "%m-%d") >= "12-21" & format(as.Date(dat[,2]), "%m-%d") < "03-21", TRUE, FALSE)
dat$esInvierno<-esInvierno
diasInvierno<-subset(dat, esInvierno==T, c(date,avg_available))
mean(diasInvierno$avg_available)
head(dat)
esInvierno<-ifelse(format(as.Date(dat[,2]), "%m-%d") >= as.Date("12-21", "%m-%d") & format(as.Date(dat[,2]), "%m-%d") < as.Date("03-21", "%m-%d"), TRUE, FALSE)
help(as.Date)
esInvierno<-ifelse(format(as.Date(dat[,2]), "%m-%d") >= strftime("12-21", "%m-%d") & format(as.Date(dat[,2]), "%m-%d") < strftime("03-21", "%m-%d"), TRUE, FALSE)
esInvierno<-ifelse(format(as.Date(dat[,2]), "%m-%d") >= "12-21" & format(as.Date(dat[,2]), "%m-%d") < "03-21", TRUE, FALSE)
dat$esInvierno<-esInvierno
head(dat)
setwd("~/Escritorio/R/shiny")
shiny::runApp('MiShiny')
setwd("~/Escritorio/R/shiny/MiShiny")
shiny::runApp()
